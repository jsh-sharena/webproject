<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Vue组件化高级：作用域插槽的案例</title>
    <script src="../lib/vue.js"></script>
</head>

<body>
    <div id="app">
        <!-- 列表展示 -->
        <cpn></cpn>

        <cpn>
            <!-- 目的是获取子组件中的pLanguages -->
            <template slot-scope="slot">
                <!-- <span v-for="item in slot.data">{{item}} - </span> -->
                <span>{{slot.data.join('-')}}</span>
            </template>
        </cpn>

        <cpn>
            <!-- 目的是获取子组件中的pLanguages -->
            <template slot-scope="slot">
                <!-- <span v-for="item in slot.data">{{item}} * </span> -->
                <span>{{slot.data.join('*')}}</span>
            </template>
        </cpn>
        <!-- <cpn></cpn> -->
    </div>
    <template id="cpn">
        <div>
            <slot :data="pLanguages">
                <ul>
                    <li v-for="item in pLanguages">{{item}}</li>
                </ul>
            </slot>
        </div>
    </template>
    <script>
        const app = new Vue({
            el: '#app',
            data: {
                message: '你好哈',
            },
            components: {
                cpn: {
                    template: '#cpn',
                    data() {
                        return {
                            pLanguages: ["JavaScript", "python", "Swift", "Go", "C++"]
                        }
                    },
                    created() {
                        this.pLanguages.join("-")
                    },
                }
            }
        })
    </script>

    <script>
        document.getElementById('button').onclick = function() {
            console.log('按钮发生了点击');
        }
    </script>
</body>

</html>